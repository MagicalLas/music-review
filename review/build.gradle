plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'

    // Spring
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

group 'dev.magical'
version '0.1'

repositories {
    jcenter()
}

// Setting jvm target version
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

def arrow_version = "0.11.0"

dependencies {

    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use strikt for testing.
    testImplementation 'io.strikt:strikt-core:0.28.0'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    // User Speck for testing.
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.15"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.15"

    // spek requires kotlin-reflect, can be omitted if already in the classpath.
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:1.4.30"

    // Arrow
    implementation "io.arrow-kt:arrow-fx:$arrow_version"
    implementation "io.arrow-kt:arrow-optics:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"

    // Spring-boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
}

// setup the test task
test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}